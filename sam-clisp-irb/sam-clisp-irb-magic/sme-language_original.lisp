;;; -*- Mode: LISP; Syntax: Common-lisp; Package: USER; Base: 10 -*-
#-Symbolics
;;(in-package sme::*the-user-package*)		;defPackage
(in-package "COMMON-LISP-USER")		;defPackage

;;;; Predicate language definition file
(sme:defPredicate have (entity entity) relation)
(sme:defPredicate in (entity entity) relation)
(sme:defPredicate by (entity entity) relation)
(sme:defPredicate father (entity entity) relation)
(sme:defPredicate respects (entity entity) relation)
(sme:defPredicate authority (entity entity) relation)
(sme:defPredicate first-time (entity entity) relation)
(sme:defPredicate reluctant (entity entity) relation)
(sme:defPredicate forget (entity entity) relation)
(sme:defPredicate together (entity entity) relation)
(sme:defPredicate is (entity entity) relation)
(sme:defPredicate far (entity entity) relation)

(sme:defPredicate angry (entity) attribute)
(sme:defPredicate angry-at (entity entity) attribute)
(sme:defPredicate has-color (entity entity) attribute)
(sme:defPredicate nocontact (entity entity) attribute)

(sme:defPredicate driving (entity) relation :expression-type action)
(sme:defPredicate wait (entity) relation :expression-type action)
(sme:defPredicate appears (entity) relation :expression-type action)

(sme:defPredicate verb (entity entity) relation :expression-type action)

(sme:defPredicate roleHero (entity) attribute :expression-type role)
(sme:defPredicate roleVillain (entity) attribute :expression-type role)
(sme:defPredicate roleTester (entity) attribute :expression-type role)
(sme:defPredicate rolePrize (entity) attribute :expression-type role)
(sme:defPredicate roleFalseHero (entity) attribute :expression-type role)
(sme:defPredicate roleOther (entity) attribute :expression-type role)
(sme:defPredicate roleNA (entity) attribute :expression-type role)

(sme:defPredicate take (entity entity) relation :expression-type action)
(sme:defPredicate fish-action (entity entity) relation :expression-type action)
(sme:defPredicate driving-to (entity entity) relation :expression-type action)
(sme:defPredicate leave (entity entity) relation :expression-type action)
(sme:defPredicate play (entity entity) relation :expression-type action)
(sme:defPredicate walks (entity entity) relation :expression-type action)
(sme:defPredicate swims (entity entity) relation :expression-type action)
(sme:defPredicate return (entity entity) relation :expression-type action)
(sme:defPredicate escape (entity entity) relation :expression-type action)
(sme:defPredicate go (entity entity) relation :expression-type action)
(sme:defPredicate see (entity entity) relation :expression-type action)
(sme:defPredicate lost (entity entity) relation :expression-type action)
(sme:defPredicate late-for (entity entity) relation :expression-type action)
(sme:defPredicate wants (entity entity) relation :expression-type action)
(sme:defPredicate learns (entity entity) relation :expression-type action)
(sme:defPredicate gives-up (entity entity) relation :expression-type action)
(sme:defPredicate change (entity entity) relation :expression-type action)
(sme:defPredicate force (entity entity relation) relation :expression-type action)
(sme:defPredicate buy (entity entity) relation :expression-type action)
(sme:defPredicate accept (entity relation) relation :expression-type action)
(sme:defPredicate reject (entity relation) relation :expression-type action)
(sme:defPredicate feed (entity entity) relation :expression-type action)
(sme:defPredicate aware (entity entity) relation :expression-type action)
(sme:defPredicate dislike (entity entity) relation :expression-type action)
(sme:defPredicate likes (entity entity) relation :expression-type action)
(sme:defPredicate help (entity entity) relation :expression-type action)
(sme:defPredicate approaches (entity entity) relation :expression-type action)
(sme:defPredicate hesitates (entity entity) relation :expression-type action)
(sme:defPredicate influences (entity entity) relation :expression-type action)
(sme:defPredicate greets (entity entity) relation :expression-type action)
(sme:defPredicate enter (entity entity) relation :expression-type action)
(sme:defPredicate work (entity entity) relation :expression-type action)
(sme:defPredicate open (entity entity) relation :expression-type action)
(sme:defPredicate close (entity entity) relation :expression-type action)
(sme:defPredicate lose (entity entity) relation :expression-type action)
(sme:defPredicate call (entity entity) relation :expression-type action)
(sme:defPredicate use (entity entity) relation :expression-type action)
(sme:defPredicate paints (entity entity) relation :expression-type action)
(sme:defPredicate push (entity entity) relation :expression-type action)
(sme:defPredicate pull (entity entity) relation :expression-type action)
(sme:defPredicate explore (entity entity) relation :expression-type action)
(sme:defPredicate hurts-to (entity entity) relation :expression-type action)
(sme:defPredicate running-out (entity entity) relation :expression-type action)
(sme:defPredicate fall (entity entity) relation :expression-type action)
(sme:defPredicate shake (entity entity) relation :expression-type action)
(sme:defPredicate take-out (entity entity) relation :expression-type action)
(sme:defPredicate eat (entity entity) relation :expression-type action)
(sme:defPredicate apologize (entity entity) relation :expression-type action)
(sme:defPredicate burn (entity entity) relation :expression-type action)
(sme:defPredicate spread (entity entity) relation :expression-type action)
(sme:defPredicate control (entity entity) relation :expression-type action)
(sme:defPredicate ignore (entity entity) relation :expression-type action)
(sme:defPredicate crashed-into (entity entity) relation :expression-type action)
(sme:defPredicate prepare (entity entity) relation :expression-type action)
(sme:defPredicate save (entity entity) relation :expression-type action)
(sme:defPredicate stuck-in (entity entity) relation :expression-type action)
(sme:defPredicate rest-on (entity entity) relation :expression-type action)

(sme:defPredicate watch (entity entity) relation :expression-type action)
(sme:defPredicate resist (entity entity) relation :expression-type action)
(sme:defPredicate fall-on (entity entity) relation :expression-type action)
(sme:defPredicate hinder (entity entity) relation :expression-type action)
(sme:defPredicate capture (entity entity) relation :expression-type action)
(sme:defPredicate confine (entity entity) relation :expression-type action)
(sme:defPredicate go-to (entity entity) relation :expression-type action)
(sme:defPredicate release (entity entity) relation :expression-type action)
(sme:defPredicate escape (entity entity) relation :expression-type action)
(sme:defPredicate feel (entity entity) relation :expression-type action)
(sme:defPredicate lead (entity entity) relation :expression-type action)
(sme:defPredicate comfort (entity entity) relation :expression-type action)
(sme:defPredicate create (entity entity) relation :expression-type action)
(sme:defPredicate belongs-to (entity entity) relation :expression-type action)
(sme:defPredicate jump-from (entity entity) relation :expression-type action)
(sme:defPredicate understand (entity entity) relation :expression-type action)
(sme:defPredicate make (entity entity) relation :expression-type action)
(sme:defPredicate hear (entity entity) relation :expression-type action)
(sme:defPredicate gasp-for (entity entity) relation :expression-type action)
(sme:defPredicate enter (entity entity) relation :expression-type action)
(sme:defPredicate wants (entity entity) relation :expression-type action)
(sme:defPredicate play (entity entity) relation :expression-type action)
(sme:defPredicate give (entity entity) relation :expression-type action)
(sme:defPredicate move (entity entity) relation :expression-type action)
(sme:defPredicate similar-to (entity entity) relation :expression-type action)
(sme:defPredicate follow (entity entity) relation :expression-type action)
(sme:defPredicate type-of (entity entity) relation :expression-type action)
(sme:defPredicate push (entity entity) relation :expression-type action)
(sme:defPredicate touch (entity entity) relation :expression-type action)
(sme:defPredicate find (entity entity) relation :expression-type action)
(sme:defPredicate damage (entity entity) relation :expression-type action)
(sme:defPredicate descend (entity entity) relation :expression-type action)
(sme:defPredicate notice (entity entity) relation :expression-type action)

(sme:defPredicate put (entity entity entity) relation :expression-type action)
(sme:defPredicate request (entity entity entity) relation :expression-type action)
(sme:defPredicate warn (entity entity entity) relation :expression-type action)
(sme:defPredicate give (entity entity entity) relation :expression-type action)
(sme:defPredicate offer (entity entity entity) relation :expression-type action)
(sme:defPredicate use-on (entity entity entity) relation :expression-type action)
(sme:defPredicate attach-to (entity entity entity) relation :expression-type action)
(sme:defPredicate tell (entity entity entity) relation :expression-type action)

(sme:defPredicate happy (entity) attribute :expression-type emotion)
(sme:defPredicate sad (entity) attribute :expression-type emotion)
(sme:defPredicate fun (entity) attribute :expression-type emotion)
(sme:defPredicate ashamed (entity) attribute :expression-type emotion)
(sme:defPredicate awkward (entity) attribute :expression-type emotion)

(sme:defPredicate hurts (entity) relation :expression-type pain)
(sme:defPredicate injured (entity) relation :expression-type pain)

(sme:defPredicate small (entity) attribute :expression-type size)
(sme:defPredicate big (entity) attribute :expression-type size)
(sme:defPredicate grow (entity) attribute :expression-type size)

(sme:defPredicate few (entity) attribute :expression-type number)
(sme:defPredicate many (entity) attribute :expression-type number)

(sme:defPredicate rich (entity) attribute :expression-type money)
(sme:defPredicate poor (entity) attribute :expression-type money)

(sme:defPredicate cold (entity) attribute :expression-type temperature)
(sme:defPredicate warm (entity) attribute :expression-type temperature)

(sme:defPredicate fast (entity) attribute :expression-type speed)
(sme:defPredicate slow (entity) attribute :expression-type speed)

(sme:defPredicate is-open (entity) attribute :expression-type openness)
(sme:defPredicate is-closed (entity) attribute :expression-type openness)
(sme:defPredicate lost (entity) attribute)
(sme:defPredicate young (entity) attribute)
(sme:defPredicate old (entity) attribute)
(sme:defPredicate dead (entity) attribute)
(sme:defPredicate alone (entity) attribute)
(sme:defPredicate animal (entity) attribute)
(sme:defPredicate cute (entity) attribute)
(sme:defPredicate rusty (entity) attribute)
(sme:defPredicate shine (entity) attribute)
(sme:defPredicate bad (entity) attribute)
(sme:defPredicate crashed (entity) attribute)
(sme:defPredicate glimy (entity) attribute)
(sme:defPredicate broken (entity) attribute)

;;;; For Force Dynamics
(sme:defPredicate fd-agonist (entity entity) relation)
(sme:defPredicate fd-antagonist (entity entity) relation)
(sme:defPredicate fd-antagonist-aligned (entity entity) relation)
(sme:defPredicate fd-stronger (entity entity) relation)
(sme:defPredicate fd-move-tendency (entity entity entity) relation)	;; First parameter is agonist/antagonist, second is the action, and third the phase
(sme:defPredicate fd-rest-tendency (entity entity entity) relation)
(sme:defPredicate fd-before (entity entity) relation)
