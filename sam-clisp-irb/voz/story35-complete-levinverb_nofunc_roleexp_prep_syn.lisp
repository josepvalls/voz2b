
;; --------------------------------------------------------------------
;; This file has been automatically generated by Voz
;; Josep Valls-Vargas
;; Jichen Zhu
;; Santiago Ontanon
;; --------------------------------------------------------------------

(setf *story*
  '(STORY-35
     (:discourse
       (:clauses
         (c0 (:s phase1 phase2))
         (phase1 (:s  t1 t2 t3 t4 t5 t6))
         (phase2 (:s  t7 t8))

       )
       (:templates
         ;; A young boy lived with his father.
         ;; His father told him to avoid going to the forest alone.
         ;; One day while his father was working, the boy sneaked out and into the forest.
         ;; A witch soon smelled him and started following him.
         ;; When she certain the boy was alone she attempted to lure him into her hut.
         ;; The boy was very clever and didn't trust the witch.
         ;; The boy quickly climbed up a tree.
         ;; But then became trapped there when the witch wouldn't leave.

         (t1 "A young boy lived with his father . ")
         (t2 "His father told him to avoid going to the forest alone . ")
         (t3 "One day while his father was working , the boy sneaked out and into the forest . ")
         (t4 "A witch soon smelled him and started following him . ")
         (t5 "When she certain the boy was alone she attempted to lure him into her hut . ")
         (t6 "The boy was very clever and did n't trust the witch . ")
         (t7 "The boy quickly climbed up a tree . ")
         (t8 "But then became trapped there when the witch would n't leave . ")

       )
     )
     (:structure
       
       (common
         (:entities
           (human :type animate)
           (MA :type human)
           (FE :type human)
           (anthropomorphized :type animate)
           (AA :type anthropomorphized)
           (AO :type anthropomorphized)
           (othera :type animate)
           (GR :type othera)
           (MB :type anthropomorphized)
           (PA :type entity)
           (AN :type othera)
           (HA :type entity)
           (OB :type inanimate)
           (SC :type inanimate)
           (PO :type inanimate)
           (setting :type entity)
           (SS :type setting)
           (ST :type setting)
           (NC :type entity)
           (NA :type entity)
           (m-1 :type NA)

         )
         (:expressions
         )
       )
      
       (phase1
         (:entities
         )
         (:expressions
         )
       )
       (phase2
         (:entities
         )
         (:expressions
         )
       )

     )
   )
)
    